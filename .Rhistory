mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
t <- seq(-10,10,length = 1000)
int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:1000, fun.rankProb, et=1, ey=1, m0=500, m1=500))
plot(ranksProb)
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
t <- seq(-10,10,length = 100)
int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:1000, fun.rankProb, et=1, ey=1, m0=500, m1=500))
plot(ranksProb)
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
t <- seq(-10,10,length = 1000)
int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:1000, fun.rankProb, et=1, ey=1, m0=500, m1=500))
plot(ranksProb)
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=1, ey=1, m0=5000, m1=5000))
plot(ranksProb)
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
t <- seq(-5,5,length = 1000)
int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=1, ey=1, m0=5000, m1=5000))
plot(ranksProb)
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
t <- seq(et-3, et+3,length = 1000)
int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=1, ey=1, m0=5000, m1=5000))
plot(ranksProb)
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
t <- seq(et-3, et+3,length = 100)
int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=1, ey=1, m0=5000, m1=5000))
plot(ranksProb)
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
t <- rnorm(1000,et,1)
int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=1, ey=1, m0=5000, m1=5000))
plot(ranksProb)
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
t <- sort(rnorm(1000,et,1))
int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=1, ey=1, m0=5000, m1=5000))
plot(ranksProb)
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
t <- sort(runif(1000))
int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=1, ey=1, m0=5000, m1=5000))
plot(ranksProb)
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
t <- seq(-5, 5, length=1000)
int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=1, ey=1, m0=5000, m1=5000))
plot(ranksProb)
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
t <- seq(-5, 5, length=10000)
int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=1, ey=1, m0=5000, m1=5000))
plot(ranksProb)
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
t <- seq(-5, 5, length=100)
int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=1, ey=1, m0=5000, m1=5000))
plot(ranksProb)
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
t <- seq(-5, 5, length=1000)
int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=1, ey=1, m0=5000, m1=5000))
plot(ranksProb)
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
t <- seq(-5, 5, length=1000)
int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=0, ey=0, m0=5000, m1=5000))
plot(ranksProb)
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
t <- seq(-5, 5, length=10000)
int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=0, ey=0, m0=5000, m1=5000))
plot(ranksProb)
?integral
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
#t <- seq(-5, 5, length=1000)
int <- integral(f, 0, 100, method = 'Kronrod', reltol = 1e-8)
#int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=0, ey=0, m0=5000, m1=5000))
plot(ranksProb)
library(pracma)
install.packages("pracma")
library(pracma)
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=0, ey=0, m0=5000, m1=5000))
plot(ranksProb)
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
#t <- seq(-5, 5, length=1000)
int <- integral(f, 0, 100, method = 'Kronrod', reltol = 1e-8)
#int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:1000, fun.rankProb, et=0, ey=0, m0=50, m1=50))
plot(ranksProb)
?integral
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
#t <- seq(-5, 5, length=1000)
int <- integral(f, -10, 10, method = 'Kronrod', reltol = 1e-8)
#int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:1000, fun.rankProb, et=0, ey=0, m0=50, m1=50))
plot(ranksProb)
library("Bolstad")
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
t <- seq(-5, 5, length=1000)
int <- sintegral(t, f, n.pts = 256)$value
return(int)
}
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=2, ey=2, m0=500, m1=500))
plot(ranksProb)
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=2, ey=2, m0=5000, m1=5000))
plot(ranksProb)
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
t <- seq(-5, 5, length=1000)
int <- sintegral(t, f, n.pts = 512)$value
return(int)
}
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=2, ey=2, m0=5000, m1=5000))
plot(ranksProb)
library("Bolstad")
fun.rankProb <- function(k, et, ey, m0, m1)
{
m = m0 + m1
f <- function(t)
{
p0 <- pnorm(t, lower.tail = FALSE)
p1 <- pnorm(t - ey, lower.tail = FALSE)
mean0 <- (m0 - 1)*p0 + m1*p1 + 1
mean1 <- m0*p0 + (m1 - 1)*p1 + 1
sd0 <- sqrt((m0 - 1)*p0*(1 - p0) + m1*p1*(1 - p1))
sd1 <- sqrt(m0*p0*(1 - p0) + (m1 - 1)*p1*(1 - p1))
if(et == 0){
prob <- dnorm(k, mean0, sd0)*dnorm(t, et, 1)
} else {
prob <- dnorm(k, mean1, sd1)*dnorm(t, et, 1)
}
return(prob)
}
t <- seq(-5, 5, length=10000)
int <- sintegral(t, f, n.pts = 512)$value
return(int)
}
system.time(ranksProb <- sapply(1:10000, fun.rankProb, et=2, ey=2, m0=5000, m1=5000))
plot(ranksProb)
