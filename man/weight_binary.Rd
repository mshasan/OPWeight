% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/weight_binary.R
\name{weight_binary}
\alias{weight_binary}
\title{Weight for the Binary effect sizes}
\usage{
weight_binary(alpha, et, m, m1, tail = 2L, delInterval = 1e-04, prob)
}
\arguments{
\item{alpha}{significance level of the hypotheis test}

\item{et}{effect size from the actual data (test effect)}

\item{m}{totoal number of hypothesis test}

\item{m1}{number of true alternative hypothesis}

\item{tail}{one-tailed or two-tailed hypothesis test. default is two-tailed test}

\item{delInterval}{interval between the delta values of a sequence}

\item{prob}{probability of the rank given the effect size}
}
\value{
\code{weight} normalized weight of the tests for the binary case
}
\description{
Compute weight from the proability of rank given the effect size
for the binary effect size
}
\details{
If one wants to test \deqn{H_0: epsilon_i=0 vs. H_a: epsilon_i = epsilon,}
then \code{et} and \code{ey} should be median or any discrete value of the test
and filter effect sizes. This is called hypothesis testing for the Binary effect
sizes. m1 can be estimated using \code{qvalue} from \code{qvalue}
in bioconductor or \code{propTrueNull} from \code{limma} package
}
\examples{
# compute the probabilities of rank for 1 to 100 tests
ranks <- 1:100
prob <- sapply(ranks,prob_rank_givenEffect,et=1,ey=1,nrep=10000,m0=50,m1=50)

# plot the prooabbility
plot(ranks,prob)

# compute weight for the binary case
weight_bin <- weight_binary(alpha=.05,et=1,m=100,m1=50,tail=2,delInterval=.0001,
prob=prob)

# plot the weight
plot(ranks,weight_bin)

}
\seealso{
\code{\link{prob_rank_givenEffect}} \code{\link{weight_continuous}}
}
\author{
Mohamad S. Hasan, mshasan@uga.edu
}
